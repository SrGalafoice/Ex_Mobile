package br.edu.fateczl.times;

import android.os.Bundle;

import androidx.fragment.app.Fragment;

import android.text.method.ScrollingMovementMethod;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import br.edu.fateczl.times.controller.TimeController;
import br.edu.fateczl.times.model.Time;
import br.edu.fateczl.times.persistence.TimeDao;

import java.sql.SQLException;
import java.util.List;

public class TimeFragment extends Fragment {

    private View view;
    private EditText etCodigo, etNome, etCidade;
    private Button btnBuscar, btnListar,btnExcluir, btnModificar, btnInserir;
    private TextView txtvListarTime;
    private TimeController ContT;

    public TimeFragment() {
        super();
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        view = inflater.inflate(R.layout.fragment_time, container, false);
        etCodigo = view.findViewById(R.id.etCodigoT);
        etNome = view.findViewById(R.id.etNomeT);
        etCidade = view.findViewById(R.id.etCidadeT);
        btnBuscar = view.findViewById(R.id.btnBuscarT);
        btnExcluir = view.findViewById(R.id.btnExcluirT);
        btnInserir = view.findViewById(R.id.btnInserirT);
        btnListar = view.findViewById(R.id.btnListarT);
        btnModificar = view.findViewById(R.id.btnModificarT);
        txtvListarTime = view.findViewById(R.id.txtvListarT);
        txtvListarTime.setMovementMethod(new ScrollingMovementMethod());

        ContT = new TimeController(new TimeDao(view.getContext()));

        btnInserir.setOnClickListener(op -> Inserir());
        btnBuscar.setOnClickListener(op -> Buscar());
        btnModificar.setOnClickListener(op -> Modificar());
        btnExcluir.setOnClickListener(op -> Excluir());
        btnListar.setOnClickListener(op -> Listar());

        return view;
    }

    private void Inserir() {
        Time time = montaTime();
        try {
            ContT.inserir(time);
            Toast.makeText(view.getContext(), "Time inserido com sucesso",
                    Toast.LENGTH_LONG).show();
        } catch (SQLException e) {
            Toast.makeText(view.getContext(), e.getMessage(), Toast.LENGTH_LONG).show();
        }
        limparCampos();
    }

    private void Buscar() {
        Time time = montaTime();
        try {
            time = ContT.buscar(time);
            if(time.getNome() != null){
                preencheCampos(time);
            }else{
                Toast.makeText(view.getContext(), "Time n√£o encontrado! :(", Toast.LENGTH_LONG).show();
                limparCampos();
            }
        } catch (SQLException e) {
            Toast.makeText(view.getContext(), e.getMessage(), Toast.LENGTH_LONG).show();
        }
    }

    private void Modificar() {
        Time time = montaTime();
        try {
            ContT.modificar(time);
            Toast.makeText(view.getContext(), "Time atualizado com sucesso",
                    Toast.LENGTH_LONG).show();
        } catch (SQLException e) {
            Toast.makeText(view.getContext(), e.getMessage(), Toast.LENGTH_LONG).show();
        }
        limparCampos();
    }

    private void Excluir() {
        Time time = montaTime();
        try {
            ContT.deletar(time);
            Toast.makeText(view.getContext(), "Time excluido com sucesso!!",
                    Toast.LENGTH_LONG).show();
        } catch (SQLException e) {
            Toast.makeText(view.getContext(), e.getMessage(), Toast.LENGTH_LONG).show();
        }
        limparCampos();
    }

    private void Listar() {
        try {
            List<Time> times = ContT.listar();
            StringBuffer buffer = new StringBuffer();
            for(Time t : times){
                buffer.append(t.toString()+"\n");
            }
            txtvListarTime.setText(buffer.toString());
        } catch (SQLException e) {
            Toast.makeText(view.getContext(), e.getMessage(), Toast.LENGTH_LONG).show();
        }
    }

    private Time montaTime(){
        Time time = new Time();
        time.setNome(etNome.getText().toString());
        time.setCodigo(Integer.parseInt(etCodigo.getText().toString()));
        time.setCidade(etCidade.getText().toString());

        return time;
    }

    private void preencheCampos(Time t){
        etNome.setText(String.valueOf(t.getNome()));
        etCodigo.setText(String.valueOf(t.getCodigo()));
        etCidade.setText(String.valueOf(t.getCidade()));
    }

    private void limparCampos(){
        etNome.setText("");
        etCodigo.setText("");
        etCidade.setText("");
    }
}
